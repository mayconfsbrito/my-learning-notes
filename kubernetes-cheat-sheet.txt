Kubernetes cheatsheet
https://kubernetes.io/pt-br/docs/reference/kubectl/cheatsheet/

Kubernetes short-names
https://blog.heptio.com/kubectl-resource-short-names-heptioprotip-c8eff9fb7202

****************** KUBECTL CONTEXTS ******************

# show the current eks cluster
kubectl config current-context

# switch context
kubect config use-context CONTEXT_NAME


****************** AWS EKS ******************

# update the context or the used cluster from EKS by kubectl
aws eks update-kubeconfig --name CLUSTER_NAME

# list the clusters from eks
aws eks list-clusters

# connect to an existing EKS cluster
aws eks --region region update-kubeconfig --name cluster_name

****************** KinD ******************

# create a cluster using an YAML file
kind create cluster --name wslkindmultinodes --config ./kind-3nodes.yaml

# delete a cluster by names
kind delete cluster --name wslkind


****************** Taint ******************

# Remove taint of all nodes
kubectl taint nodes --all node-role.kubernetes.io/master-


****************** YAML ******************

# Generate an YAML code of a nonexisting deployment (using --dry-run).
# The object won't be created
kubectl create deployment two --image=nginx --dry-run=client -o yaml

# Show an YAML output of an existing deployment
kubectl get deployment NAME -o yaml

# Generate the YAML file of the newsly created objects
kubectl get deployments,rs,pods -o yaml


****************** Deployment ******************

# Create a simple deployment for nginx image
kubectl create deployment NAME --image nginx


****************** Pods ******************

# Remove failed or evicted pods
kubectl delete pod --field-selector="status.phase==Failed"

# Print environment vars from a pod
kubectl exec POD_NAME -- printenv
kubectl exec POD_NAME -- /bin/bash -c 'echo $VARIABLE'


****************** Rollout ******************

# Check/Describe a revision of a Rollout
kubectl rollout history ds ds-one --revision=2


****************** ConfigMaps ******************

# Create a configmap from literal, a single file, or many files within a directory
kubectl create configmap NAME --from-literal=KEY=VALUE --from-file=./FILE_NAME --from-file=./DIR_NAME/


****************** ConfigMaps ******************

# Get secret decoded data value | kubectl describe secret shows the decoded value as well
kubectl get secret kubernetes-dashboard-token-w9m4j --template={{.data.KEY_NAME}} | base64 --decode

****************** Labels ******************

# Apply label to node
kubectl label node NODE_NAME KEY=VALUE

# Remove label from node (minus to remove the desired label by key)
kubectl label node NODE_NAME KEY-

****************** Monitoring ******************

# List resources used by the pods of this namespace
kubectl top pod

# Show used resources by node
kubectl top nodes